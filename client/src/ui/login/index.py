import streamlit as st
import webbrowser
import time
from utils.utils import redirect
from services.auth_service import authService


def login():
    # Get the request URL
    request_url = st.experimental_get_query_params()
    code = request_url.get("code", [None])[0]
    st.markdown(
        """
        <style>
        .css-10zg0a4, .e1fqkh3o1 {
            display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )
    if code is not None:

        st.title("Clothes Image Analyzer GitHub Authorization")
        with st.spinner("Logging in..."):
            authService.github_login(code)

            # Remove the spinner and display the content
            st.success("Logged in successfully! You will be redirected to the home page. You can close this tab.")
            time.sleep(1)  # Simulating some processing time

            redirect("home")

    else:
        st.markdown(
            """
            <style>
            .stApp {
                background-color: #F4EEE0;
            }
            .block-container {
                max-width: 54rem;
            }
            .st-bq {
                background-color: #F4EEE0;
            }
            h1 {
                color: #FF6969;
            }
            # button {
            #     width: 140px;
            # }
            </style>
            """,
            unsafe_allow_html=True
        )

        st.title("Welcome to Clothes Image Analyzer project!")

        col1, _col0, col2 = st.columns([2, 2, 3], gap='large')

        with col1:
            st.image("./images/background.png", width=500, caption='Background generated by AI')

        with col2:
            # Apply the equal-height styling to the column
            st.markdown('<div class="tab-container">', unsafe_allow_html=True)

            tab1, tab2 = st.tabs(["Login", "Register"])

            with tab1:
                username = st.text_input("Username")
                password = st.text_input("Password", type="password")

                if st.button("Login", use_container_width=True):
                    # Handle login logic here
                    st.write("Login button clicked")

                # Display a divider
                st.divider()
                st.markdown("Or login with:")

                tab_col1, tab_col2 = st.columns(2)

                with tab_col1:
                    if st.button("Google", use_container_width=True):
                        # Handle Google login logic here
                        st.write("Login with Google button clicked")

                with tab_col2:
                    if st.button("GitHub", use_container_width=True):
                        webbrowser.open(authService.get_github_login_url())

            with tab2:
                if st.button("Register"):
                    # Handle registration logic here
                    st.write("Register button clicked")

    st.markdown('</div>', unsafe_allow_html=True)
